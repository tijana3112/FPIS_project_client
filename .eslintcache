[{"D:\\ReactProjects\\project\\src\\index.js":"1","D:\\ReactProjects\\project\\src\\App.js":"2","D:\\ReactProjects\\project\\src\\reportWebVitals.js":"3","D:\\ReactProjects\\project\\src\\store.js":"4","D:\\ReactProjects\\project\\src\\components\\Dashboard\\Dashboard.js":"5","D:\\ReactProjects\\project\\src\\components\\MenuBar\\MenuBar.js":"6","D:\\ReactProjects\\project\\src\\reducers\\index.js":"7","D:\\ReactProjects\\project\\src\\reducers\\obavestenjeReducer.js":"8","D:\\ReactProjects\\project\\src\\actions\\types.js":"9","D:\\ReactProjects\\project\\src\\components\\Obavestenje\\ObavestenjeList.js":"10","D:\\ReactProjects\\project\\src\\components\\Obavestenje\\ObavestenjeTable.js":"11","D:\\ReactProjects\\project\\src\\actions\\obavestenjeActions.js":"12","D:\\ReactProjects\\project\\src\\components\\Obavestenje\\ObavestenjeRow.js":"13","D:\\ReactProjects\\project\\src\\reducers\\uplatnicaReducer.js":"14","D:\\ReactProjects\\project\\src\\reducers\\radnikReducer.js":"15","D:\\ReactProjects\\project\\src\\reducers\\osigKucaReducer.js":"16","D:\\ReactProjects\\project\\src\\components\\Obavestenje\\AddObavestenje.js":"17","D:\\ReactProjects\\project\\src\\components\\ComboBox.js":"18","D:\\ReactProjects\\project\\src\\actions\\osigKucaActions.js":"19","D:\\ReactProjects\\project\\src\\actions\\radnikActions.js":"20","D:\\ReactProjects\\project\\src\\utils.js":"21","D:\\ReactProjects\\project\\src\\constants.js":"22","D:\\ReactProjects\\project\\src\\components\\UplatnicaZaOsig\\ModalZaUplatnicu.js":"23","D:\\ReactProjects\\project\\src\\actions\\uplatnicaAction.js":"24","D:\\ReactProjects\\project\\src\\components\\UplatnicaZaOsig\\UplatnicaList.js":"25","D:\\ReactProjects\\project\\src\\components\\UplatnicaZaOsig\\UplatnicaTable.js":"26","D:\\ReactProjects\\project\\src\\components\\UplatnicaZaOsig\\UplatnicaRow.js":"27","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\AddRacun.js":"28","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\RacunList.js":"29","D:\\ReactProjects\\project\\src\\reducers\\nacinPlacanjaReducer.js":"30","D:\\ReactProjects\\project\\src\\reducers\\ovlascenoLiceReducer.js":"31","D:\\ReactProjects\\project\\src\\actions\\racunActions.js":"32","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\RacunTable.js":"33","D:\\ReactProjects\\project\\src\\reducers\\racunReducer.js":"34","D:\\ReactProjects\\project\\src\\actions\\nacinPlacanjaActions.js":"35","D:\\ReactProjects\\project\\src\\actions\\ovlascenoLiceActions.js":"36","D:\\ReactProjects\\project\\src\\components\\UgovorOOsiguranju\\ModalZaUgovor.js":"37","D:\\ReactProjects\\project\\src\\components\\UgovorOOsiguranju\\UgovorList.js":"38","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\RacunRow.js":"39","D:\\ReactProjects\\project\\src\\actions\\ugovorActions.js":"40","D:\\ReactProjects\\project\\src\\components\\UgovorOOsiguranju\\UgovorTable.js":"41","D:\\ReactProjects\\project\\src\\components\\UgovorOOsiguranju\\UgovorRow.js":"42","D:\\ReactProjects\\project\\src\\reducers\\ugovorReducer.js":"43","D:\\ReactProjects\\project\\src\\reducers\\errorReducer.js":"44","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\StavkaTable.js":"45","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\StavkaRow.js":"46","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\ModalZaStavku.js":"47","D:\\ReactProjects\\project\\src\\components\\Dashboard\\Pocetna.js":"48","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\UpdateRacun.js":"49","D:\\ReactProjects\\project\\src\\components\\Obavestenje\\UpdateObavestenje.js":"50","D:\\ReactProjects\\project\\src\\reducers\\stavkeReducer.js":"51","D:\\ReactProjects\\project\\src\\actions\\stavkeActions.js":"52","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\ModalZaStavkuUpdate.js":"53","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\PrikaziRacun.js":"54","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\StavkaTableShow.js":"55","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\StavkaRowShow.js":"56"},{"size":500,"mtime":499162500000,"results":"57","hashOfConfig":"58"},{"size":1838,"mtime":1620231216655,"results":"59","hashOfConfig":"58"},{"size":362,"mtime":499162500000,"results":"60","hashOfConfig":"58"},{"size":652,"mtime":1610819062588,"results":"61","hashOfConfig":"58"},{"size":285,"mtime":1620058344195,"results":"62","hashOfConfig":"58"},{"size":1000,"mtime":1620239115826,"results":"63","hashOfConfig":"58"},{"size":880,"mtime":1620071518817,"results":"64","hashOfConfig":"58"},{"size":593,"mtime":1619903161671,"results":"65","hashOfConfig":"58"},{"size":802,"mtime":1620071284287,"results":"66","hashOfConfig":"58"},{"size":3021,"mtime":1620246921148,"results":"67","hashOfConfig":"58"},{"size":983,"mtime":1611426942202,"results":"68","hashOfConfig":"58"},{"size":1660,"mtime":1620242463699,"results":"69","hashOfConfig":"58"},{"size":1999,"mtime":1620060467361,"results":"70","hashOfConfig":"58"},{"size":333,"mtime":1619529403927,"results":"71","hashOfConfig":"58"},{"size":322,"mtime":1611441253367,"results":"72","hashOfConfig":"58"},{"size":328,"mtime":1611441311080,"results":"73","hashOfConfig":"58"},{"size":8778,"mtime":1620649516230,"results":"74","hashOfConfig":"58"},{"size":463,"mtime":1611426613387,"results":"75","hashOfConfig":"58"},{"size":261,"mtime":1611441506643,"results":"76","hashOfConfig":"58"},{"size":256,"mtime":1611441744478,"results":"77","hashOfConfig":"58"},{"size":2204,"mtime":1620243887740,"results":"78","hashOfConfig":"58"},{"size":240,"mtime":1619987619986,"results":"79","hashOfConfig":"58"},{"size":1745,"mtime":1620132623271,"results":"80","hashOfConfig":"58"},{"size":1248,"mtime":1619985030234,"results":"81","hashOfConfig":"58"},{"size":3620,"mtime":1619914570441,"results":"82","hashOfConfig":"58"},{"size":950,"mtime":1619913341284,"results":"83","hashOfConfig":"58"},{"size":1223,"mtime":1620226811217,"results":"84","hashOfConfig":"58"},{"size":12529,"mtime":1620648102929,"results":"85","hashOfConfig":"58"},{"size":2748,"mtime":1620056171230,"results":"86","hashOfConfig":"58"},{"size":357,"mtime":1619529526814,"results":"87","hashOfConfig":"58"},{"size":319,"mtime":1619529480845,"results":"88","hashOfConfig":"58"},{"size":1456,"mtime":1620668649092,"results":"89","hashOfConfig":"58"},{"size":1049,"mtime":1620230705131,"results":"90","hashOfConfig":"58"},{"size":643,"mtime":1620069819475,"results":"91","hashOfConfig":"58"},{"size":284,"mtime":1619531176374,"results":"92","hashOfConfig":"58"},{"size":266,"mtime":1619531220635,"results":"93","hashOfConfig":"58"},{"size":1671,"mtime":1620151408634,"results":"94","hashOfConfig":"58"},{"size":2595,"mtime":1619912508177,"results":"95","hashOfConfig":"58"},{"size":2297,"mtime":1620230885118,"results":"96","hashOfConfig":"58"},{"size":589,"mtime":1619901507617,"results":"97","hashOfConfig":"58"},{"size":913,"mtime":1620229147270,"results":"98","hashOfConfig":"58"},{"size":1244,"mtime":1620151661124,"results":"99","hashOfConfig":"58"},{"size":432,"mtime":1619912303995,"results":"100","hashOfConfig":"58"},{"size":269,"mtime":1619640439257,"results":"101","hashOfConfig":"58"},{"size":954,"mtime":1620152860000,"results":"102","hashOfConfig":"58"},{"size":1497,"mtime":1620655744171,"results":"103","hashOfConfig":"58"},{"size":4104,"mtime":1620603419433,"results":"104","hashOfConfig":"58"},{"size":734,"mtime":1620249735374,"results":"105","hashOfConfig":"58"},{"size":14630,"mtime":1620648169809,"results":"106","hashOfConfig":"58"},{"size":9725,"mtime":1620649575787,"results":"107","hashOfConfig":"58"},{"size":552,"mtime":1620071480448,"results":"108","hashOfConfig":"58"},{"size":560,"mtime":1620600803691,"results":"109","hashOfConfig":"58"},{"size":4116,"mtime":1620603567717,"results":"110","hashOfConfig":"58"},{"size":7939,"mtime":1620663569120,"results":"111","hashOfConfig":"58"},{"size":856,"mtime":1620230236973,"results":"112","hashOfConfig":"58"},{"size":531,"mtime":1620647984310,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"19s9p6b",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"116"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"116"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"116"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"116"},"D:\\ReactProjects\\project\\src\\index.js",[],["254","255"],"D:\\ReactProjects\\project\\src\\App.js",[],"D:\\ReactProjects\\project\\src\\reportWebVitals.js",[],"D:\\ReactProjects\\project\\src\\store.js",[],"D:\\ReactProjects\\project\\src\\components\\Dashboard\\Dashboard.js",[],"D:\\ReactProjects\\project\\src\\components\\MenuBar\\MenuBar.js",[],"D:\\ReactProjects\\project\\src\\reducers\\index.js",[],"D:\\ReactProjects\\project\\src\\reducers\\obavestenjeReducer.js",["256"],"import { GET_OBAVESTENJA, GET_OBAVESTENJE, DELETE_OBAVESTENJE } from \"../actions/types\";\n\nconst initialState = {\n  obavestenja: [],\n  obavestenje: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_OBAVESTENJA:\n      return {\n        ...state,\n        obavestenja: action.payload,\n      };\n    case GET_OBAVESTENJE:\n      return {\n        ...state,\n        obavestenje: action.payload,\n      };\n    case DELETE_OBAVESTENJE:\n      return {\n        ...state,\n        obavestenja: action.payload,\n      };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\actions\\types.js",[],"D:\\ReactProjects\\project\\src\\components\\Obavestenje\\ObavestenjeList.js",[],"D:\\ReactProjects\\project\\src\\components\\Obavestenje\\ObavestenjeTable.js",[],"D:\\ReactProjects\\project\\src\\actions\\obavestenjeActions.js",[],"D:\\ReactProjects\\project\\src\\components\\Obavestenje\\ObavestenjeRow.js",[],"D:\\ReactProjects\\project\\src\\reducers\\uplatnicaReducer.js",["257"],"import { GET_UPLATNICE } from \"../actions/types\";\n\nconst initialState = {\n  uplatnice: [],\n  uplatnica: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_UPLATNICE:\n      return {\n        ...state,\n        uplatnice: action.payload,\n      };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\reducers\\radnikReducer.js",["258"],"import { GET_RADNICI } from \"../actions/types\";\n\nconst initialState = {\n  radnici: [],\n  radnik: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_RADNICI:\n      return {\n        ...state,\n        radnici: action.payload,\n      };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\reducers\\osigKucaReducer.js",["259"],"import { GET_OSIGKUCE } from \"../actions/types\";\n\nconst initialState = {\n  osigKuce: [],\n  osigKuca: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_OSIGKUCE:\n      return {\n        ...state,\n        osigKuce: action.payload,\n      };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\components\\Obavestenje\\AddObavestenje.js",["260","261","262","263","264","265"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createObavestenje } from \"../../actions/obavestenjeActions\";\nimport { getRadnici } from \"../../actions/radnikActions\";\nimport { getOsigKuce } from \"../../actions/osigKucaActions\";\nimport DatePicker from \"react-datepicker\";\nimport classnames from \"classnames\";\nimport { adjustTimezoneDifference, setMessage } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport ComboBox from \"../ComboBox\";\nimport ModalZaUplatnicu from \"../UplatnicaZaOsig/ModalZaUplatnicu\";\n\nclass AddObavestenje extends Component {\n  constructor() {\n    super();\n    this.state = {\n      svrhaObavestenja: \"\",\n      datum: \"\",\n      uplatnica: {\n        idUplatnice: 0,\n        svrhaUplate: \"\",\n        iznos: 0\n      },\n      radnik: {\n        sifraRadnika: 0,\n      },\n      osiguravajucaKuca: {\n        idOsigKuce: 0,\n      },\n      show: false,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ errors: nextProps.errors })\n}\n\n  componentDidMount() {\n    this.props.getOsigKuce();\n    this.props.getRadnici();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleDateChange(date) {\n    this.setState({ datum: date });\n  }\n\n  handleValidation = () => {\n    let error = false;\n\n    if (this.state.svrhaObavestenja == \"\") {\n      this.props.setMessage(\"Morate uneti svrhu obavestenja!\", \"#svrhaObavestenja\", \"#msg1\");\n      error = true;\n    }\n\n    if (this.state.uplatnica.idUplatnice == 0) {\n      this.props.setMessage(\"Morate izabrati uplatnicu!\", \"#idUplatnice\", \"#msg2\");\n      error = true;\n    }\n\n    if (this.state.radnik.sifraRadnika == 0) {\n      this.props.setMessage(\"Morate izabrati radnika!\", \"#radnik\", \"#msg3\");\n      error = true;\n    }\n\n    if (this.state.osiguravajucaKuca.idOsigKuce == 0) {\n      this.props.setMessage(\"Morate izabrati osiguravajucu kucu!\", \"#osiguravajucaKuca\", \"#msg4\");\n      error = true;\n    }\n\n    return error;\n  };\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation() == true) {\n      return;\n    }\n\n    const newObavestenje = {\n      svrhaObavestenja: this.state.svrhaObavestenja,\n      datum: adjustTimezoneDifference(this.state.datum),\n      uplatnica: {\n        idUplatnice: this.state.uplatnica.idUplatnice\n      },\n      radnik: {\n        sifraRadnika: this.state.radnik.sifraRadnika,\n      },\n      osiguravajucaKuca: {\n        idOsigKuce: this.state.osiguravajucaKuca.idOsigKuce,\n      },\n    };\n    console.log(newObavestenje);\n    this.props.createObavestenje(\n      newObavestenje,\n      this.props.history,\n    );\n  }\n\n  updateIdOfRadnik(object) {\n    return (e) => {\n      this.setState({ [object]: { sifraRadnika: e.target.value } });\n    };\n  }\n\n  updateIdOfOsigKuca(object) {\n    return (e) => {\n      this.setState({ [object]: { idOsigKuce: e.target.value } });\n    };\n  }\n\n  showModal = e => {\n    this.setState({\n      show: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n    });\n  };\n  chosenUplatnica = (uplatnica) => {\n    this.setState({\n      uplatnica: {\n        idUplatnice: uplatnica.idUplatnice,\n        svrhaUplate: uplatnica.svrhaUplate,\n        iznos: uplatnica.iznos\n      },\n      show: false\n    });\n}\n\n\n  render() {\n    const { radnici } = this.props.radnik;\n    const { osigKuce } = this.props.osigKuca;\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 m-auto\">\n                <h4 className=\"text-center\">Unos novog obavestenja o izvrsenoj uplati osiguranja</h4>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"svrhaObavestenja\"\n                      className={classnames(\"form-control\", {\n                        \"is-invalid\": errors.svrhaObavestenja\n                    })}\n                      placeholder=\"Svrha obavestenja\"\n                      name=\"svrhaObavestenja\"\n                      value={this.state.svrhaObavestenja}\n                      onChange={this.onChange}\n                    />\n                    <div id=\"msg1\" />\n                  </div>\n                  <div className=\"form-group float-left\">\n                    <DatePicker\n                      showYearDropdown\n                      yearDropdownItemNumber={30}\n                      scrollableYearDropdown\n                      className=\"input form-control\"\n                      dateFormat=\"dd.MM.yyyy\"\n                      selected={this.state.datum}\n                      onChange={this.handleDateChange}\n                      placeholderText=\"Datum\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                  <button type=\"button\" className=\"btn btn-large btn-warning float-right\" onClick={e => {\n                    this.showModal();\n                    }}><i className=\"fa fa-search\" />&nbsp;Pretraga uplatnica</button>\n                    <ModalZaUplatnicu\n                    show={this.state.show}\n                    handleClose={this.handleClose}\n                    chosenUplatnica={this.chosenUplatnica}\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      id=\"idUplatnice\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"ID uplatnice\"\n                      name=\"idUplatnice\"\n                      value={this.state.uplatnica.idUplatnice}\n                      readOnly\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Svrha uplate\"\n                      name=\"svrhaUplate\"\n                      value={this.state.uplatnica.svrhaUplate}\n                      readOnly\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Iznos\"\n                      name=\"iznos\"\n                      value={this.state.uplatnica.iznos+\" din\"}\n                      readOnly\n                    />\n                    <div id=\"msg2\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <ComboBox\n                      option={radnici.map((radnik) => (\n                        <option key={radnik.sifraRadnika} value={radnik.sifraRadnika}>\n                          {radnik.imePrezime}\n                        </option>\n                      ))}\n                      onChange={this.updateIdOfRadnik(\"radnik\")}\n                      id=\"radnik\"\n                      text=\"Izaberite radnika\"\n                    />\n                    <div id=\"msg3\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <ComboBox\n                      option={osigKuce.map((osigKuca) => (\n                        <option key={osigKuca.idOsigKuce} value={osigKuca.idOsigKuce}>\n                          {osigKuca.nazivOsigKuce}\n                        </option>\n                      ))}\n                      onChange={this.updateIdOfOsigKuca(\"osiguravajucaKuca\")}\n                      id=\"osiguravajucaKuca\"\n                      text=\"Izaberite osiguravajucu kucu\"\n                    />\n                    <div id=\"msg4\" />\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-large btn-success float-right mb-3\"\n                  >\n                    <i className=\"fa fa-check fa-1x\" /> Sacuvaj\n                  </button>\n\n                  <Link to={`/obavestenjeList`}>\n                    <i className=\"fa fa-arrow-circle-left fa-3x fa-pull-left text-danger\" />\n                  </Link>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    radnik: state.radnik,\n    osigKuca: state.osigKuca,\n    errors: state.errors\n  });\n\nexport default connect(mapStateToProps, { setMessage, createObavestenje, getRadnici, getOsigKuce })(AddObavestenje);","D:\\ReactProjects\\project\\src\\components\\ComboBox.js",[],"D:\\ReactProjects\\project\\src\\actions\\osigKucaActions.js",[],"D:\\ReactProjects\\project\\src\\actions\\radnikActions.js",[],"D:\\ReactProjects\\project\\src\\utils.js",[],"D:\\ReactProjects\\project\\src\\constants.js",[],"D:\\ReactProjects\\project\\src\\components\\UplatnicaZaOsig\\ModalZaUplatnicu.js",["266"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-bootstrap/Modal\";\nimport moment from \"moment\";\nimport { getUplatnice } from \"../../actions/uplatnicaAction\";\nimport UplatnicaList from \"./UplatnicaList\";\n\nclass ModalZaUplatnicu extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      ...props.uplatnica,\n    };\n\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUplatnice();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      idUplatnice,\n      svrhaUplate,\n      iznos\n    } = nextProps.uplatnica;\n\n    this.setState({\n        idUplatnice,\n        svrhaUplate,\n        iznos\n    });\n  }\n\n  handleClose() {\n    this.props.handleClose();\n  }\n  chosenUplatnica(uplatnica) {\n      this.props.chosenUplatnica(uplatnica);\n      this.props.handleClose();\n  }\n\n  render() {\n    console.log(this.props.uplatnica);\n    if(!this.props.show){\n        return null;\n    }\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.handleClose}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n        <Modal.Title>Uplatnica za osiguranje\n        </Modal.Title>\n        </Modal.Header>\n          <Modal.Body>\n              <UplatnicaList chosenUplatnica={this.props.chosenUplatnica}/>\n          </Modal.Body>\n          \n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  uplatnica: state.uplatnica,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {\n  getUplatnice,\n})(ModalZaUplatnicu);\n","D:\\ReactProjects\\project\\src\\actions\\uplatnicaAction.js",[],"D:\\ReactProjects\\project\\src\\components\\UplatnicaZaOsig\\UplatnicaList.js",["267","268","269"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getUplatnice, getUplatniceByIdSvrha, getUplatniceById, getUplatniceBySvrha\n} from \"../../actions/uplatnicaAction\";\nimport PropTypes from \"prop-types\";\n\nimport UplatnicaTable from \"./UplatnicaTable\";\nimport { Link } from \"react-router-dom\";\n\n\nclass UplatnicaList extends Component {\n    constructor() {\n        super();\n    \n        this.state = {\n            idUplatnice: \"\",\n            svrhaUplate: \"\",\n        };\n    \n        this.onChange = this.onChange.bind(this);\n        this.getAllUplatnice = this.getAllUplatnice.bind(this);\n        this.getUplatniceBy = this.getUplatniceBy.bind(this);\n      }\n\n  componentDidMount() {\n    this.props.getUplatnice();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getUplatniceBy() {\n    if(this.state.idUplatnice === \"\" && this.state.svrhaUplate !== \"\"){\n      this.props.getUplatniceBySvrha(this.state.svrhaUplate, this.props.history);\n    } else if (this.state.idUplatnice != \"\" && this.state.svrhaUplate == \"\") {\n      this.props.getUplatniceById(this.state.idUplatnice, this.props.history);\n    } else {\n      this.props.getUplatniceByIdSvrha(this.state.idUplatnice, this.state.svrhaUplate, this.props.history);\n    }\n    \n  }\n\n  getAllUplatnice() {\n    this.props.getUplatnice();\n  }\n\n  render() {\n    const { uplatnice } = this.props.uplatnica;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 m-auto\">\n            <div className=\"card text-left mb-3\">\n              <div className=\"card-header text-white\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"ID uplatnice\"\n                  name=\"idUplatnice\"\n                  value={this.state.idUplatnice}\n                  onChange={this.onChange}\n                ></input>\n                </div>\n                <div className=\"col-6\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Svrha uplate\"\n                  name=\"svrhaUplate\"\n                  value={this.state.svrhaUplate}\n                  onChange={this.onChange}\n                ></input>\n                </div>\n                </div>\n                <button\n                  className=\"btn btn-large btn-danger float-right mt-2\"\n                  onClick={this.getAllUplatnice}\n                >\n                  Ponisti filter\n                </button>\n                <button\n                  className=\"btn btn-large btn-success float-right mt-2 mr-3\"\n                  onClick={this.getUplatniceBy}\n                >\n                  Primeni filter\n                </button>\n                <br />                                \n              </div>\n              <div className=\"card-body\">\n                <UplatnicaTable uplatnice={uplatnice} chosenUplatnica={this.props.chosenUplatnica} />\n              </div>                                \n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nUplatnicaList.propTypes = {\n  uplatnica: PropTypes.object.isRequired,\n  getUplatnice: PropTypes.func.isRequired,\n  getUplatniceByIdSvrha: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  uplatnica: state.uplatnica,\n});\n\nexport default connect(mapStateToProps, {\n  getUplatnice,\n  getUplatniceByIdSvrha,\n  getUplatniceById, getUplatniceBySvrha\n})(UplatnicaList);","D:\\ReactProjects\\project\\src\\components\\UplatnicaZaOsig\\UplatnicaTable.js",[],"D:\\ReactProjects\\project\\src\\components\\UplatnicaZaOsig\\UplatnicaRow.js",["270","271","272","273"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nclass UplatnicaRow extends Component {\n\n  render() {\n    return (\n      <tr>\n        <td>{this.props.uplatnica.idUplatnice}</td>\n        <td>{this.props.uplatnica.svrhaUplate}</td>\n        <td>\n          {this.props.uplatnica.iznos} din</td>\n        <td>\n          {this.props.uplatnica.racunOsiguranja != null\n            ? this.props.uplatnica.racunOsiguranja.brojRacuna\n            : \"\"}\n        </td>\n        <td>\n          {this.props.uplatnica.model != null\n            ? this.props.uplatnica.model.idModela\n            : \"\"}\n        </td>\n        <td>\n          {this.props.uplatnica.valuta != null\n            ? this.props.uplatnica.valuta.idValute + \" : \" + this.props.uplatnica.valuta.nazivValute\n            : \"\"}\n        </td>\n        <td width=\"10%\" className=\"text-center\">\n          <button onClick={this.props.chosenUplatnica.bind(null, this.props.uplatnica)} className=\"btn btn-large btn-success\">\n            Izaberi\n            </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\n\nexport default (\n    UplatnicaRow\n);\n","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\AddRacun.js",["274","275","276","277","278","279","280","281","282"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createRacun } from \"../../actions/racunActions\";\nimport { getNaciniPlacanja } from \"../../actions/nacinPlacanjaActions\";\nimport { getOvlascenjaLica } from \"../../actions/ovlascenoLiceActions\";\nimport DatePicker from \"react-datepicker\";\nimport classnames from \"classnames\";\nimport { adjustTimezoneDifference, setMessage } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport ComboBox from \"../ComboBox\";\nimport ModalZaUgovor from \"../UgovorOOsiguranju/ModalZaUgovor\";\nimport StavkaTable from \"../StavkaRacuna/StavkaTable\";\nimport ModalZaStavku from \"../StavkaRacuna/ModalZaStavku\";\n\nclass AddRacun extends Component {\n  constructor() {\n    super();\n    this.state = {\n      brojRacuna: \"\",\n      datum: \"\",\n      iznos: 0,\n      pozivNaBroj: \"\",\n      ugovorOOsiguranju: {\n        brojUgovora: 0,\n        zahtevZaOsiguranje: {\n            sifraZahteva: 0,\n        },\n      },\n      nacinPlacanja: {\n        idNacinaPlacanja: 0,\n      },\n      ovlascenoLiceOsiguravajuceKuce: {\n        sifraOL: 0,\n      },\n      stavke: [],\n      showU: false,\n      showS: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getOvlascenjaLica();\n    this.props.getNaciniPlacanja();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleDateChange(date) {\n    this.setState({ datum: date });\n  }\n\n  handleValidation = () => {\n    let error = false;\n\n    if (this.state.brojRacuna == \"\") {\n      this.props.setMessage(\"Morate uneti broj racuna!\", \"#brojRacuna\", \"#msg1\");\n      error = true;\n    }\n\n    if (this.state.pozivNaBroj == \"\") {\n      this.props.setMessage(\"Morate uneti poziv na broj!\", \"#pozivNaBroj\", \"#msg2\");\n      error = true;\n    }\n\n    if (this.state.ugovorOOsiguranju.brojUgovora == 0) {\n      this.props.setMessage(\"Morate izabrati ugovor!\", \"#brojUgovora\", \"#msg3\");\n      error = true;\n    }\n\n    if (this.state.stavke.length === 0) {\n      this.props.setMessage(\"Morate dodati bar jednu stavku racuna!\", \"#stavkaTable\", \"#msg4\");\n      error = true;\n    }\n\n    if (this.state.iznos == 0) {\n      this.props.setMessage(\"Morate izracunati ukupan iznos!\", \"#iznos\", \"#msg5\");\n      error = true;\n    }\n\n    if (this.state.nacinPlacanja.idNacinaPlacanja == 0) {\n      this.props.setMessage(\"Morate izabrati nacin placanja!\", \"#nacinPlacanja\", \"#msg6\");\n      error = true;\n    }\n\n    if (this.state.ovlascenoLiceOsiguravajuceKuce.sifraOL == 0) {\n      this.props.setMessage(\"Morate izabrati ovlasceno lice!\", \"#ovlascenoLiceOsiguravajuceKuce\", \"#msg7\");\n      error = true;\n    }\n\n    return error;\n  };\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation() == true) {\n      return;\n    }\n\n    const newRacun = {\n      brojRacuna: this.state.brojRacuna,\n      datum: adjustTimezoneDifference(this.state.datum),\n      iznos: this.state.iznos,\n      pozivNaBroj: this.state.pozivNaBroj,\n      ugovorOOsiguranju: {\n        brojUgovora: this.state.ugovorOOsiguranju.brojUgovora\n      },\n      nacinPlacanja: {\n        idNacinaPlacanja: this.state.nacinPlacanja.idNacinaPlacanja,\n      },\n      ovlascenoLiceOsiguravajuceKuce: {\n        sifraOL: this.state.ovlascenoLiceOsiguravajuceKuce.sifraOL,\n      },\n      stavke: this.state.stavke\n    };\n    console.log(newRacun);\n    this.props.createRacun(\n      newRacun,\n      this.props.history,\n    );\n  }\n\n  updateIdOfNacinPlacanja(object) {\n    return (e) => {\n      this.setState({ [object]: { idNacinaPlacanja: e.target.value } });\n    };\n  }\n\n  updateIdOfOvLice(object) {\n    return (e) => {\n      this.setState({ [object]: { sifraOL: e.target.value } });\n    };\n  }\n\n  showModalU = e => {\n    this.setState({\n      showU: true\n    });\n  };\n\n  showModalS = e => {\n    this.setState({\n      showS: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      showU: false,\n      showS: false,\n    });\n  };\n\n  chosenUgovor = (ugovor) => {\n    this.setState({\n      ugovorOOsiguranju: {\n        brojUgovora: ugovor.brojUgovora,\n        zahtevZaOsiguranje: {\n            sifraZahteva: ugovor.zahtevZaOsiguranje.sifraZahteva,\n        },\n      },\n      showU: false\n    });\n}\n\naddStavka = (stavka) => {\n    this.setState({\n      stavke: this.state.stavke.concat(stavka),\n      showS: false\n    });\n    console.log(this.state.stavke);\n}\n\ncalcIznos() {\n    let stavke = this.state.stavke;\n    var iznos = 0;\n    for (let index = 0; index < stavke.length; index++) {\n        iznos = iznos + parseFloat(stavke[index].cena);  \n    }\n    this.setState({\n        iznos: iznos\n    });\n}\n\nobrisiStavku = (stavka) => {\n    let stavke = this.state.stavke;\n    const index = stavke.indexOf(stavka);\n    if (window.confirm(\"Da li zaista zelite da obrisete izabranu stavku?\")) {\n    if (index > -1) {\n        stavke.splice(index, 1);\n        this.setState({\n            stavke: stavke\n        });\n    }\n  }\n}\n\nizmeniStavku = (stavka, izmenjenaStavka) => {\n  let stavke = this.state.stavke;\n  const index = stavke.indexOf(stavka);\n  if (index > -1) {\n      stavke.splice(index, 1, izmenjenaStavka);\n      this.setState({\n          stavke: stavke\n      }); \n  }\n}\n\n  render() {\n    const { naciniPlacanja } = this.props.nacinPlacanja;\n    console.log(naciniPlacanja);\n    const { ovlLica } = this.props.ovlLice;\n    console.log(this.state.stavke);\n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 m-auto\">\n                <h4 className=\"text-center\">Unos novog racuna za osiguranje</h4>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"brojRacuna\"\n                      className=\"form-control\"\n                      placeholder=\"Broj racuna\"\n                      name=\"brojRacuna\"\n                      value={this.state.brojRacuna}\n                      onChange={this.onChange}\n                    />\n                    <div id=\"msg1\" />\n                  </div>\n                  <div className=\"form-group float-left\">\n                    <DatePicker\n                      showYearDropdown\n                      yearDropdownItemNumber={30}\n                      scrollableYearDropdown\n                      className=\"input form-control\"\n                      dateFormat=\"dd.MM.yyyy\"\n                      selected={this.state.datum}\n                      onChange={this.handleDateChange}\n                      placeholderText=\"Datum\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"pozivNaBroj\"\n                      className=\"form-control\"\n                      placeholder=\"Poziv na broj\"\n                      name=\"pozivNaBroj\"\n                      value={this.state.pozivNaBroj}\n                      onChange={this.onChange}\n                    />\n                    <div id=\"msg2\" />\n                  </div>\n                  <div className=\"form-group\">\n                  <button type=\"button\" className=\"btn btn-large btn-warning float-right mb-3\" onClick={e => {\n                    this.showModalU();\n                    }}><i className=\"fa fa-search\" />&nbsp;Pretraga ugovora</button>\n                    <ModalZaUgovor\n                    show={this.state.showU}\n                    handleClose={this.handleClose}\n                    chosenUgovor={this.chosenUgovor}\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"brojUgovora\"\n                      className=\"form-control\"\n                      placeholder=\"Broj ugovora\"\n                      name=\"brojUgovora\"\n                      value={this.state.ugovorOOsiguranju.brojUgovora}\n                      readOnly\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Sifra zahteva\"\n                      name=\"sifraZahteva\"\n                      value={this.state.ugovorOOsiguranju.zahtevZaOsiguranje.sifraZahteva}\n                      readOnly\n                    />\n                    <div id=\"msg3\" />\n                    </div>\n                    <div className=\"form-group\">\n                    <h5>Stavke racuna</h5>\n                    <div className=\"form-group\">\n                    <button type=\"button\" className=\"btn btn-large btn-warning float-right mb-3\" onClick={e => {\n                        this.showModalS();\n                        }}><i className=\"fa fa-plus\" />&nbsp;Dodaj stavku</button>\n                        <ModalZaStavku\n                        show={this.state.showS}\n                        handleClose={this.handleClose}\n                        addStavka={this.addStavka}\n                        calcIznos={this.calcIznos}\n                        brojRacuna={this.state.brojRacuna}\n                        />\n                    </div>\n                    <div className=\"form-group\" id=\"stavkaTable\">\n                    <StavkaTable stavke={this.state.stavke} obrisiStavku={this.obrisiStavku} izmeniStavku={this.izmeniStavku}></StavkaTable>\n                    <div id=\"msg4\" />\n                    </div>\n                    </div>\n                    <div className=\"form-group\">\n                    <button type=\"button\" className=\"btn btn-large btn-warning float-right mb-3\" onClick={e => {\n                        this.calcIznos();\n                        }}><i className=\"fa fa-calculator\" />&nbsp;Izracunaj ukupan iznos</button>\n                    <input\n                      type=\"text\"\n                      id=\"iznos\"\n                      className=\"form-control\"\n                      placeholder=\"Ukupan iznos\"\n                      name=\"iznos\"\n                      value={this.state.iznos+\" din\"}\n                      onChange={this.onChange}\n                      readOnly\n                    />\n                    <div id=\"msg5\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <ComboBox\n                      option={naciniPlacanja.map((nacinPlacanja) => (\n                        <option key={nacinPlacanja.idNacinaPlacanja} value={nacinPlacanja.idNacinaPlacanja}>\n                        {nacinPlacanja.opisNacinaPlacanja}\n                        </option>\n                      ))}\n                      onChange={this.updateIdOfNacinPlacanja(\"nacinPlacanja\")}\n                      id=\"nacinPlacanja\"\n                      text=\"Izaberite nacin placanja\"\n                    />\n                    <div id=\"msg6\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <ComboBox\n                      option={ovlLica.map((ovlLice) => (\n                        <option key={ovlLice.sifraOL} value={ovlLice.sifraOL}>\n                          {ovlLice.imePrezime}\n                        </option>\n                      ))}\n                      onChange={this.updateIdOfOvLice(\"ovlascenoLiceOsiguravajuceKuce\")}\n                      id=\"ovlascenoLiceOsiguravajuceKuce\"\n                      text=\"Izaberite ovlasceno lice\"\n                    />\n                    <div id=\"msg7\" />\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-large btn-success float-right mt-1 mb-3\"\n                  >\n                  <i className=\"fa fa-check fa-1x\" /> Sacuvaj\n                  </button>\n\n                  <Link to={`/racunList`}>\n                  <i className=\"fa fa-arrow-circle-left fa-3x fa-pull-left text-danger\" />\n                  </Link>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    nacinPlacanja: state.nacinPlacanja,\n    ovlLice: state.ovlLice,\n  });\n\nexport default connect(mapStateToProps, { setMessage, createRacun, getOvlascenjaLica, getNaciniPlacanja })(AddRacun);","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\RacunList.js",[],"D:\\ReactProjects\\project\\src\\reducers\\nacinPlacanjaReducer.js",["283"],"import { GET_NACINIPLACANJA } from \"../actions/types\";\n\nconst initialState = {\n  naciniPlacanja: [],\n  nacinPlacanja: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_NACINIPLACANJA:\n      return {\n        ...state,\n        naciniPlacanja: action.payload,\n      };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\reducers\\ovlascenoLiceReducer.js",["284"],"import { GET_OLICE } from \"../actions/types\";\n\nconst initialState = {\n  ovlLica: [],\n  ovlLice: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_OLICE:\n      return {\n        ...state,\n        ovlLica: action.payload,\n      };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\actions\\racunActions.js",["285"],"D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\RacunTable.js",[],"D:\\ReactProjects\\project\\src\\reducers\\racunReducer.js",["286"],"import { GET_RACUN, GET_RACUNI, DELETE_RACUN, GET_RACUNUP } from \"../actions/types\";\n\nconst initialState = {\n  racuni: [],\n  racun: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_RACUNI:\n      return {\n        ...state,\n        racuni: action.payload,\n      };\n    case GET_RACUN:\n      return {\n        ...state,\n        racuni: action.payload,\n      };\n      case GET_RACUNUP:\n      return {\n        ...state,\n        racun: action.payload,\n      };\n    case DELETE_RACUN:\n      return {\n        ...state,\n        racuni: action.payload,\n      };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\actions\\nacinPlacanjaActions.js",[],"D:\\ReactProjects\\project\\src\\actions\\ovlascenoLiceActions.js",[],"D:\\ReactProjects\\project\\src\\components\\UgovorOOsiguranju\\ModalZaUgovor.js",["287"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-bootstrap/Modal\";\nimport moment from \"moment\";\nimport { getUgovori } from \"../../actions/ugovorActions\";\nimport UgovorList from \"./UgovorList\";\n\nclass ModalZaUgovor extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      ...props.ugovor,\n    };\n\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUgovori();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      brojUgovora,\n      zahtevZaOsiguranje\n    } = nextProps.ugovor;\n\n    this.setState({\n        brojUgovora,\n        zahtevZaOsiguranje\n    });\n  }\n\n  handleClose() {\n    this.props.handleClose();\n  }\n  chosenUgovor(ugovor) {\n      this.props.chosenUgovor(ugovor);\n      this.props.handleClose();\n  }\n\n  render() {\n    console.log(this.props.ugovor);\n    if(!this.props.show){\n        return null;\n    }\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.handleClose}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n        <Modal.Title>Ugovor o osiguranju\n        </Modal.Title>\n        </Modal.Header>\n          <Modal.Body>\n              <UgovorList chosenUgovor={this.props.chosenUgovor}/>\n          </Modal.Body>\n          \n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ugovor: state.ugovor,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {\n  getUgovori,\n})(ModalZaUgovor);\n","D:\\ReactProjects\\project\\src\\components\\UgovorOOsiguranju\\UgovorList.js",["288"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getUgovori, getUgovorById\n} from \"../../actions/ugovorActions\";\nimport PropTypes from \"prop-types\";\nimport UgovorTable from \"./UgovorTable\";\nimport { Link } from \"react-router-dom\";\n\n\nclass UgovorList extends Component {\n    constructor() {\n        super();\n    \n        this.state = {\n            brojUgovora: \"\",\n        };\n    \n        this.onChange = this.onChange.bind(this);\n        this.getAllUgovori = this.getAllUgovori.bind(this);\n        this.getUgovorById = this.getUgovorById.bind(this);\n      }\n\n  componentDidMount() {\n    this.props.getUgovori();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getUgovorById() {\n    this.props.getUgovorById(this.state.brojUgovora, this.props.history);\n  }\n\n  getAllUgovori() {\n    this.props.getUgovori();\n  }\n\n  render() {\n    const { ugovori } = this.props.ugovor;\n    console.log(ugovori);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 m-auto\">\n            <div className=\"card text-left mb-3\">\n              <div className=\"card-header text-white\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Broj ugovora\"\n                  name=\"brojUgovora\"\n                  value={this.state.brojUgovora}\n                  onChange={this.onChange}\n                ></input>\n                <button\n                  className=\"btn btn-large btn-danger float-right mt-2\"\n                  onClick={this.getAllUgovori}\n                >\n                  Ponisti filter\n                </button>\n                <button\n                  className=\"btn btn-large btn-success float-right mt-2 mr-3\"\n                  onClick={this.getUgovorById}\n                >\n                  Primeni filter\n                </button>\n                <br />                                \n              </div>\n              <div className=\"card-body\">\n                <UgovorTable ugovori={ugovori} chosenUgovor={this.props.chosenUgovor} />\n              </div>                                \n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nUgovorList.propTypes = {\n  ugovor: PropTypes.object.isRequired,\n  getUgovori: PropTypes.func.isRequired,\n  getUgovorById: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  ugovor: state.ugovor,\n});\n\nexport default connect(mapStateToProps, {\n  getUgovori,\n  getUgovorById,\n})(UgovorList);","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\RacunRow.js",[],"D:\\ReactProjects\\project\\src\\actions\\ugovorActions.js",[],"D:\\ReactProjects\\project\\src\\components\\UgovorOOsiguranju\\UgovorTable.js",[],"D:\\ReactProjects\\project\\src\\components\\UgovorOOsiguranju\\UgovorRow.js",["289","290","291"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nclass UgovorRow extends Component {\n\n  render() {\n    return (\n      <tr>\n        <td>{this.props.ugovor.brojUgovora}</td>\n        <td>\n          {this.props.ugovor.datum !== null\n            ? moment(this.props.ugovor.datum).format(\"DD.MM.yyyy\")\n            : \"\"}\n        </td>\n        <td>{this.props.ugovor.potpisao}</td>\n        <td>\n          {this.props.ugovor.drzava != null\n            ? this.props.ugovor.drzava.nazivDrzave\n            : \"\"}\n        </td>\n        <td>\n          {this.props.ugovor.zahtevZaOsiguranje != null\n            ? this.props.ugovor.zahtevZaOsiguranje.sifraZahteva\n            : \"\"}\n        </td>\n        <td>\n          {this.props.ugovor.radnik != null\n            ? this.props.ugovor.radnik.imePrezime\n            : \"\"}\n        </td>\n        <td width=\"10%\" className=\"text-center\">\n          <button onClick={this.props.chosenUgovor.bind(null, this.props.ugovor)} className=\"btn btn-large btn-success\">\n            Izaberi\n            </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\n\nexport default (\n    UgovorRow\n);\n","D:\\ReactProjects\\project\\src\\reducers\\ugovorReducer.js",["292"],"import { GET_UGOVOR, GET_UGOVORI } from \"../actions/types\";\n\nconst initialState = {\n  ugovori: [],\n  ugovor: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_UGOVORI:\n      return {\n        ...state,\n        ugovori: action.payload,\n      };\n    case GET_UGOVOR:\n      return {\n        ...state,\n        ugovori: action.payload,\n        };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\reducers\\errorReducer.js",["293"],"import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\StavkaTable.js",["294"],"import React, { Component } from \"react\";\nimport StavkaRow from \"./StavkaRow\";\n\nclass StavkaTable extends Component {\n  render() {\n    if(this.props.stavke == undefined){\n      return null;\n    }\n      console.log(this.props.stavke);\n    let stavke = this.props.stavke.map((stavka) => (\n        <StavkaRow key={stavka.sifraStavke} stavka={stavka} obrisiStavku={this.props.obrisiStavku} izmeniStavku={this.props.izmeniStavku} />\n        ));\n        \n    return (\n      <div className=\"table-responsive tableHeight\">\n        <table\n          id=\"example\"\n          className=\"table table-sm table-striped table-bordered\"\n        >\n          <thead>\n            <tr>\n              <th>Naziv vrste osiguranja</th>\n              <th>Cena</th>\n              <th>Izmeni stavku</th>\n              <th>Obrisi stavku</th>\n            </tr>\n          </thead>\n          <tbody>{stavke}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default StavkaTable;","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\StavkaRow.js",["295","296","297"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport ModalZaStavkuUpdate from \"./ModalZaStavkuUpdate\";\n\nclass StavkaRow extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showS: false,\n    };\n    this.unesiStavku = this.unesiStavku.bind(this);\n  }\n\n  unesiStavku(izmenjenaStavka){\n    this.props.izmeniStavku(this.props.stavka, izmenjenaStavka);\n    this.handleClose();\n  }\n\n  showModalS = e => {\n    this.setState({\n      showS: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      showS: false,\n    });\n  };\n\n\n  render() {\n    return (\n      <tr>\n        <td>{this.props.stavka.nazivVrsteOsig}</td>\n        <td>{this.props.stavka.cena} din</td>\n        <td width=\"22%\" className=\"text-center\">\n        <Link onClick={e => {\n          this.showModalS();\n          }}><i className=\"fa fa-pencil fa-2x text-success\" /></Link>\n          <ModalZaStavkuUpdate\n          show={this.state.showS}\n          handleClose={this.handleClose}\n          stavka={this.props.stavka}\n          unesiStavku={this.unesiStavku}\n          />\n        </td>\n        <td width=\"22%\" className=\"text-center\">\n        <Link onClick={this.props.obrisiStavku.bind(null, this.props.stavka)}>\n            <i className=\"fa fa-trash fa-2x text-danger\" />\n        </Link>\n        </td>\n      </tr>\n    );\n  }\n}\n\n\nexport default (\n    StavkaRow\n);\n","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\ModalZaStavku.js",["298","299","300","301","302"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-bootstrap/Modal\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { setMessage } from \"../../utils\";\n\nclass ModalZaStavku extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      nazivVrsteOsig: \"\",\n      cena: \"\",\n      racunOsiguranja: {\n        brojRacuna: \"\"\n      } \n    };\n    this.onChange = this.onChange.bind(this);\n    this.dodajStavku = this.dodajStavku.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentDidMount(){\n    \n  }\n\n  dodajStavku() {\n    if (this.handleValidation() == true) {\n      return;\n    }\n    const newStavka = {\n      nazivVrsteOsig: this.state.nazivVrsteOsig,\n      cena: this.state.cena,\n      racunOsiguranja: {\n        brojRacuna: this.props.brojRacuna\n      }\n    };\n    console.log(newStavka);\n    this.props.addStavka(newStavka);\n    this.setState({nazivVrsteOsig: \"\",\n    cena: \"\"});\n  }\n\n  handleClose() {\n    this.props.handleClose();\n    this.setState({nazivVrsteOsig: \"\",\n    cena: \"\"});\n  }\n\n  handleDateChange(date) {\n    this.setState({ datum: date });\n  }\n\n  handleValidation = () => {\n    let error = false;\n\n    if (this.state.nazivVrsteOsig == \"\") {\n      this.props.setMessage(\"Morate uneti naziv vrste osiguranja!\", \"#nazivM\", \"#m1\");\n      error = true;\n    }\n\n    if (this.state.cena == \"\") {\n      this.props.setMessage(\"Morate uneti cenu!\", \"#cenaM\", \"#m2\");\n      error = true;\n    }\n\n    if (parseInt(this.state.cena) <= 0) {\n      this.props.setMessage(\"Cena mora biti veca od 0!\", \"#cenaM\", \"#m3\");\n      error = true;\n    }\n\n    return error;\n  };\n\n  render() {\n    console.log(this.state);\n    if(!this.props.show){\n        return null;\n    }\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.handleClose}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n        <Modal.Title>Unos stavke racuna za osiguranje\n        </Modal.Title>\n        </Modal.Header>\n          <Modal.Body>\n          <div>\n          <div className=\"register\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6 m-auto\">\n                  <hr />\n                  <form>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        id=\"nazivM\"\n                        className=\"form-control\"\n                        placeholder=\"Naziv vrste osiguranja\"\n                        name=\"nazivVrsteOsig\"\n                        value={this.state.nazivVrsteOsig}\n                        onChange={this.onChange}\n                      />\n                      <div id=\"m1\" />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        id=\"cenaM\"\n                        className=\"form-control\"\n                        placeholder=\"Cena\"\n                        name=\"cena\"\n                        value={this.state.cena}\n                        onChange={this.onChange}\n                      />\n                      <div id=\"m2\" />\n                      <div id=\"m3\" />\n                    </div>\n                    \n                    <button\n                      type=\"button\"\n                      className=\"btn btn-large btn-success float-right mb-3\"\n                      onClick={this.dodajStavku}\n                    >\n                      <i className=\"fa fa-check\" /> Dodaj stavku\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n          </Modal.Body>\n          \n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { setMessage})(ModalZaStavku);\n","D:\\ReactProjects\\project\\src\\components\\Dashboard\\Pocetna.js",[],"D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\UpdateRacun.js",["303","304","305","306","307","308","309","310","311","312","313","314"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createRacun, getRacun } from \"../../actions/racunActions\";\nimport { getNaciniPlacanja } from \"../../actions/nacinPlacanjaActions\";\nimport { getOvlascenjaLica } from \"../../actions/ovlascenoLiceActions\";\nimport { deleteStavka, createStavka } from \"../../actions/stavkeActions\";\nimport DatePicker from \"react-datepicker\";\nimport classnames from \"classnames\";\nimport { adjustTimezoneDifference, dateFromBackendToJsDate, setMessage } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport ComboBox from \"../ComboBox\";\nimport ModalZaUgovor from \"../UgovorOOsiguranju/ModalZaUgovor\";\nimport StavkaTable from \"../StavkaRacuna/StavkaTable\";\nimport ModalZaStavku from \"../StavkaRacuna/ModalZaStavku\";\n\nclass UpdateRacun extends Component {\n  constructor() {\n    super();\n    this.state = {\n      brojRacuna: \"\",\n      datum: \"\",\n      iznos: 0,\n      pozivNaBroj: \"\",\n      ugovorOOsiguranju: {\n        brojUgovora: 0,\n        zahtevZaOsiguranje: {\n            sifraZahteva: 0,\n        },\n      },\n      nacinPlacanja: {\n        idNacinaPlacanja: 0,\n      },\n      ovlascenoLiceOsiguravajuceKuce: {\n        sifraOL: 0,\n      },\n      stavke: [],\n      status: \"\",\n      showU: false,\n      showS: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {brojRacuna,\n      datum,\n      iznos,\n      pozivNaBroj,\n      stavke,\n      ugovorOOsiguranju,\n      nacinPlacanja,\n      ovlascenoLiceOsiguravajuceKuce,\n      status} = nextProps.racun;\n\n    this.setState({\n      brojRacuna,\n      datum: dateFromBackendToJsDate(datum),\n      iznos,\n      pozivNaBroj,\n      stavke,\n      ugovorOOsiguranju,\n      nacinPlacanja,\n      ovlascenoLiceOsiguravajuceKuce,\n      status\n    });\n  }\n  componentDidMount() {\n    const { brojRacuna } = this.props.match.params;\n    this.props.getRacun(brojRacuna, this.props.history);\n    this.props.getOvlascenjaLica();\n    this.props.getNaciniPlacanja();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleDateChange(date) {\n    this.setState({ datum: date });\n  }\n\n  handleValidation = () => {\n    let error = false;\n\n    if (this.state.brojRacuna == \"\") {\n      this.props.setMessage(\"Morate uneti broj racuna!\", \"#brojRacuna\", \"#msg1\");\n      error = true;\n    }\n\n    if (this.state.pozivNaBroj == \"\") {\n      this.props.setMessage(\"Morate uneti poziv na broj!\", \"#pozivNaBroj\", \"#msg2\");\n      error = true;\n    }\n\n    if (this.state.ugovorOOsiguranju.brojUgovora == 0) {\n      this.props.setMessage(\"Morate izabrati ugovor!\", \"#brojUgovora\", \"#msg3\");\n      error = true;\n    }\n\n    if (this.state.stavke.length === 0) {\n      this.props.setMessage(\"Morate dodati bar jednu stavku racuna!\", \"#stavkaTable\", \"#msg4\");\n      error = true;\n    }\n\n    if (this.state.iznos == 0) {\n      this.props.setMessage(\"Morate izracunati ukupan iznos!\", \"#iznos\", \"#msg5\");\n      error = true;\n    }\n\n    if (this.state.nacinPlacanja.idNacinaPlacanja == 0) {\n      this.props.setMessage(\"Morate izabrati nacin placanja!\", \"#nacinPlacanja\", \"#msg6\");\n      error = true;\n    }\n\n    if (this.state.ovlascenoLiceOsiguravajuceKuce.sifraOL == 0) {\n      this.props.setMessage(\"Morate izabrati ovlasceno lice!\", \"#ovlascenoLiceOsiguravajuceKuce\", \"#msg7\");\n      error = true;\n    }\n\n    return error;\n  };\n\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation() == true) {\n      return;\n    }\n\n    const updatedRacun = {\n      brojRacuna: this.state.brojRacuna,\n      datum: adjustTimezoneDifference(this.state.datum),\n      iznos: this.state.iznos,\n      pozivNaBroj: this.state.pozivNaBroj,\n      ugovorOOsiguranju: this.state.ugovorOOsiguranju,\n      nacinPlacanja: this.state.nacinPlacanja,\n      ovlascenoLiceOsiguravajuceKuce: this.state.ovlascenoLiceOsiguravajuceKuce,\n      stavke: this.state.stavke,\n      status: this.state.status\n    };\n    console.log(updatedRacun);\n    this.props.createRacun(\n      updatedRacun,\n      this.props.history,\n    );\n  }\n\n  updateIdOfNacinPlacanja(object) {\n    return (e) => {\n      this.setState({ [object]: { idNacinaPlacanja: e.target.value } });\n    };\n  }\n\n  updateIdOfOvLice(object) {\n    return (e) => {\n      this.setState({ [object]: { sifraOL: e.target.value } });\n    };\n  }\n\n  showModalU = e => {\n    this.setState({\n      showU: true\n    });\n  };\n\n  showModalS = e => {\n    this.setState({\n      showS: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      showU: false,\n      showS: false,\n    });\n  };\n\n  chosenUgovor = (ugovor) => {\n    this.setState(() => ({\n      ugovorOOsiguranju: {\n        brojUgovora: ugovor.brojUgovora,\n        zahtevZaOsiguranje: {\n            sifraZahteva: ugovor.zahtevZaOsiguranje.sifraZahteva,\n        },\n      },\n      showU: false\n    }));\n}\n\naddStavka = (stavka) => {\n    this.props.createStavka(stavka);\n    console.log(this.state.stavke);\n    const { brojRacuna } = this.props.match.params;\n    this.props.getRacun(brojRacuna, this.props.history);\n    this.setState({\n      showS: false,\n    });\n    \n}\n\ncalcIznos() {\n    let stavke = this.state.stavke;\n    var iznos = 0;\n    for (let index = 0; index < stavke.length; index++) {\n        iznos = iznos + parseFloat(stavke[index].cena);  \n    }\n    this.setState({\n        iznos: iznos\n    });\n}\n\nobrisiStavku = (stavka) => {\n    let stavke = this.state.stavke;\n    const index = stavke.indexOf(stavka);\n    if (window.confirm(\"Da li zaista zelite da obrisete izabranu stavku?\")) {\n    if (index > -1) {\n        stavke.splice(index, 1);\n        this.setState({\n            stavke: stavke\n        }); \n    }\n    if(stavka.sifraStavke !== \"\"){\n    this.props.deleteStavka(stavka.sifraStavke);\n    }\n  }\n}\nizmeniStavku = (stavka,izmenjenaStavka) => {\n  let stavke = this.state.stavke;\n  const index = stavke.indexOf(stavka);\n  if (index > -1) {\n      stavke.splice(index, 1, izmenjenaStavka);\n      this.setState({\n          stavke: stavke\n      }); \n  }\n}\n\n\n  render() {\n    if(this.props.racun == undefined){\n      return;\n    }\n    const { naciniPlacanja } = this.props.nacinPlacanja;\n    const { ovlLica } = this.props.ovlLice;\n    console.log(this.state.stavke);\n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 m-auto\">\n                <h4 className=\"text-center\">Izmena racuna za osiguranje</h4>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"brojRacuna\"\n                      className=\"form-control\"\n                      placeholder=\"Broj racuna\"\n                      name=\"brojRacuna\"\n                      value={this.state.brojRacuna}\n                      onChange={this.onChange}\n                      readOnly\n                    />\n                    <div id=\"msg1\" />\n                  </div>\n                  <div className=\"form-group float-left\">\n                    <DatePicker\n                      showYearDropdown\n                      yearDropdownItemNumber={30}\n                      scrollableYearDropdown\n                      className=\"input form-control\"\n                      dateFormat=\"dd.MM.yyyy\"\n                      selected={this.state.datum}\n                      onChange={this.handleDateChange}\n                      placeholderText=\"Datum\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"pozivNaBroj\"\n                      className=\"form-control\"\n                      placeholder=\"Poziv na broj\"\n                      name=\"pozivNaBroj\"\n                      value={this.state.pozivNaBroj}\n                      onChange={this.onChange}\n                    />\n                    <div id=\"msg2\" />\n                  </div>\n                  <div className=\"form-group\">\n                  <button type=\"button\" className=\"btn btn-large btn-warning float-right mb-3\" onClick={e => {\n                    this.showModalU();\n                    }}><i className=\"fa fa-search\" />&nbsp;Pretraga ugovora</button>\n                    <ModalZaUgovor\n                    show={this.state.showU}\n                    handleClose={this.handleClose}\n                    chosenUgovor={this.chosenUgovor}\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"brojUgovora\"\n                      className=\"form-control\"\n                      placeholder=\"Broj ugovora\"\n                      name=\"brojUgovora\"\n                      value={this.state.ugovorOOsiguranju != undefined ? this.state.ugovorOOsiguranju.brojUgovora : \"\"}\n                      readOnly\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Sifra zahteva\"\n                      name=\"sifraZahteva\"\n                      value={this.state.ugovorOOsiguranju != undefined ? this.state.ugovorOOsiguranju.zahtevZaOsiguranje.sifraZahteva : \"\"}\n                      readOnly\n                    />\n                    <div id=\"msg3\" />\n                    </div>\n                    <div className=\"form-group\">\n                    <h5>Stavke racuna</h5>\n                    <div className=\"form-group\">\n                    <button type=\"button\" className=\"btn btn-large btn-warning float-right mb-3\" onClick={e => {\n                        this.showModalS();\n                        }}><i className=\"fa fa-plus\" />&nbsp;Dodaj stavku</button>\n                        <ModalZaStavku\n                        show={this.state.showS}\n                        handleClose={this.handleClose}\n                        addStavka={this.addStavka}\n                        calcIznos={this.calcIznos}\n                        brojRacuna={this.state.brojRacuna}\n                        />\n                    </div>\n                    <div className=\"form-group\" id=\"stavkaTable\">\n                    <StavkaTable stavke={this.state.stavke} obrisiStavku={this.obrisiStavku} izmeniStavku={this.izmeniStavku}></StavkaTable>\n                    <div id=\"msg4\" />\n                    </div>\n                    </div>\n                    <div className=\"form-group\">\n                    <button type=\"button\" className=\"btn btn-large btn-warning float-right mb-3\" onClick={e => {\n                        this.calcIznos();\n                        }}><i className=\"fa fa-calculator\" />&nbsp;Izracunaj ukupan iznos</button>\n                    <input\n                      type=\"text\"\n                      id=\"iznos\"\n                      className=\"form-control\"\n                      placeholder=\"Ukupan iznos\"\n                      name=\"iznos\"\n                      value={this.state.iznos+\" din\"}\n                      onChange={this.onChange}\n                      readOnly\n                    />\n                    <div id=\"msg5\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <ComboBox\n                      option={naciniPlacanja.map((nacinPlacanja) => (\n                        <option key={nacinPlacanja.idNacinaPlacanja} value={nacinPlacanja.idNacinaPlacanja}>\n                        {nacinPlacanja.opisNacinaPlacanja}\n                        </option>\n                      ))}\n                      onChange={this.updateIdOfNacinPlacanja(\"nacinPlacanja\")}\n                      id=\"nacinPlacanja\"\n                      text=\"Izaberite nacin placanja\"\n                      ID={\n                        this.state.nacinPlacanja != null\n                          ? this.state.nacinPlacanja.idNacinaPlacanja\n                          : 0\n                      }\n                    />\n                    <div id=\"msg6\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <ComboBox\n                      option={ovlLica.map((ovlLice) => (\n                        <option key={ovlLice.sifraOL} value={ovlLice.sifraOL}>\n                          {ovlLice.imePrezime}\n                        </option>\n                      ))}\n                      onChange={this.updateIdOfOvLice(\"ovlascenoLiceOsiguravajuceKuce\")}\n                      id=\"ovlascenoLiceOsiguravajuceKuce\"\n                      text=\"Izaberite ovlasceno lice\"\n                      ID={\n                        this.state.ovlascenoLiceOsiguravajuceKuce != null\n                          ? this.state.ovlascenoLiceOsiguravajuceKuce.sifraOL\n                          : 0\n                      }\n                    />\n                    <div id=\"msg7\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <p>Izaberi status:</p>\n                    <input type=\"radio\" id=\"status\" name=\"status\" value=\"Izmenjen\" onChange={this.onChange} checked={this.state.status === \"Izmenjen\"}/>&nbsp;\n                    <label for=\"status\">Izmenjen</label>\n                    <input className=\"ml-5\" type=\"radio\" id=\"status\" name=\"status\" value=\"Obradjen\" onChange={this.onChange} checked={this.state.status === \"Obradjen\"}/>&nbsp;\n                    <label for=\"status\">Obradjen</label><br></br>\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-large btn-success float-right mt-1 mb-3\"\n                  >\n                  <i className=\"fa fa-check fa-1x\" /> Sacuvaj\n                  </button>\n\n                  <Link to={`/racunList`}>\n                  <i className=\"fa fa-arrow-circle-left fa-3x fa-pull-left text-danger\" />\n                  </Link>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    racun: state.racun.racun,\n    nacinPlacanja: state.nacinPlacanja,\n    ovlLice: state.ovlLice,\n    stavka: state.stavka.stavka\n  });\n\nexport default connect(mapStateToProps, { createRacun, getRacun, getOvlascenjaLica, getNaciniPlacanja, deleteStavka, setMessage, createStavka })(UpdateRacun);","D:\\ReactProjects\\project\\src\\components\\Obavestenje\\UpdateObavestenje.js",["315","316","317","318","319","320","321","322","323","324","325"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createObavestenje, getObavestenjeById } from \"../../actions/obavestenjeActions\";\nimport { getRadnici } from \"../../actions/radnikActions\";\nimport { getOsigKuce } from \"../../actions/osigKucaActions\";\nimport DatePicker from \"react-datepicker\";\nimport classnames from \"classnames\";\nimport { adjustTimezoneDifference, dateFromBackendToJsDate, setMessage } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport ComboBox from \"../ComboBox\";\nimport ModalZaUplatnicu from \"../UplatnicaZaOsig/ModalZaUplatnicu\";\n\nclass UpdateObavestenje extends Component {\n  constructor() {\n    super();\n    this.state = {\n      svrhaObavestenja: \"\",\n      datum: \"\",\n      uplatnica: {\n        idUplatnice: 0,\n        svrhaUplate: \"\",\n        iznos: \"\"\n      },\n      radnik: {\n        sifraRadnika: 0,\n      },\n      osiguravajucaKuca: {\n        idOsigKuce: 0,\n      },\n      show: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { idObavestenja,\n      svrhaObavestenja,\n      datum,\n      uplatnica,\n      radnik,\n      osiguravajucaKuca} = nextProps.obavestenje;\n\n    this.setState({\n      idObavestenja,\n      svrhaObavestenja,\n      datum: dateFromBackendToJsDate(datum),\n      uplatnica,\n      radnik,\n      osiguravajucaKuca\n    });\n  }\n\n  componentDidMount() {\n    const { idObavestenja } = this.props.match.params;\n    this.props.getObavestenjeById(idObavestenja, this.props.history)\n    this.props.getOsigKuce();\n    this.props.getRadnici();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleDateChange(date) {\n    this.setState({ datum: date });\n  }\n\n  handleValidation = () => {\n    let error = false;\n\n    if (this.state.svrhaObavestenja == \"\") {\n      this.props.setMessage(\"Morate uneti svrhu obavestenja!\", \"#svrhaObavestenja\", \"#msg1\");\n      error = true;\n    }\n\n    if (this.state.uplatnica.idUplatnice == 0) {\n      this.props.setMessage(\"Morate izabrati uplatnicu!\", \"#idUplatnice\", \"#msg2\");\n      error = true;\n    }\n\n    if (this.state.radnik.sifraRadnika == 0) {\n      this.props.setMessage(\"Morate izabrati radnika!\", \"#radnik\", \"#msg3\");\n      error = true;\n    }\n\n    if (this.state.osiguravajucaKuca.idOsigKuce == 0) {\n      this.props.setMessage(\"Morate izabrati osiguravajucu kucu!\", \"#osiguravajucaKuca\", \"#msg4\");\n      error = true;\n    }\n\n    return error;\n  };\n\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation() == true) {\n      return;\n    }\n\n    const updatedObavestenje = {\n        idObavestenja: this.state.idObavestenja,\n      svrhaObavestenja: this.state.svrhaObavestenja,\n      datum: adjustTimezoneDifference(this.state.datum),\n      uplatnica: this.state.uplatnica,\n      radnik: this.state.radnik,\n      osiguravajucaKuca: this.state.osiguravajucaKuca,\n    };\n    console.log(updatedObavestenje);\n    this.props.createObavestenje(\n        updatedObavestenje,\n      this.props.history,\n    );\n  }\n\n  updateIdOfRadnik(object) {\n    return (e) => {\n      this.setState({ [object]: { sifraRadnika: e.target.value } });\n    };\n  }\n\n  updateIdOfOsigKuca(object) {\n    return (e) => {\n      this.setState({ [object]: { idOsigKuce: e.target.value } });\n    };\n  }\n\n  showModal = e => {\n    this.setState({\n      show: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n    });\n  };\n  chosenUplatnica = (uplatnica) => {\n    this.setState({\n      uplatnica: {\n        idUplatnice: uplatnica.idUplatnice,\n        svrhaUplate: uplatnica.svrhaUplate,\n        iznos: uplatnica.iznos\n      },\n      show: false\n    });\n}\n\n\n  render() {\n    console.log(this.props.obavestenje);\n    if(this.props.obavestenje == undefined){\n      return;\n    }\n    const { radnici } = this.props.radnik;\n    const { osigKuce } = this.props.osigKuca;\n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 m-auto\">\n                <h4 className=\"text-center\">Izmena obavestenja o izvrsenoj uplati osiguranja</h4>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"svrhaObavestenja\"\n                      className=\"form-control\"\n                      placeholder=\"Svrha obavestenja\"\n                      name=\"svrhaObavestenja\"\n                      value={this.state.svrhaObavestenja}\n                      onChange={this.onChange}\n                    />\n                    <div id=\"msg1\" />\n                  </div>\n                  <div className=\"form-group float-left\">\n                    <DatePicker\n                      showYearDropdown\n                      yearDropdownItemNumber={30}\n                      scrollableYearDropdown\n                      className=\"input form-control\"\n                      dateFormat=\"dd.MM.yyyy\"\n                      selected={this.state.datum}\n                      onChange={this.handleDateChange}\n                      placeholderText=\"Datum\"\n                      name=\"datum\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                  <button type=\"button\" className=\"btn btn-large btn-warning float-right\" onClick={e => {\n                    this.showModal();\n                    }}><i className=\"fa fa-search\" />&nbsp;Pretraga uplatnica</button>\n                    <ModalZaUplatnicu\n                    show={this.state.show}\n                    handleClose={this.handleClose}\n                    chosenUplatnica={this.chosenUplatnica}\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      id=\"idUplatnice\"\n                      className=\"form-control\"\n                      placeholder=\"ID uplatnice\"\n                      name=\"idUplatnice\"\n                      value={this.state.uplatnica != undefined ? this.state.uplatnica.idUplatnice : \"\"}\n                      readOnly\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Svrha uplate\"\n                      name=\"svrhaUplate\"\n                      value={this.state.uplatnica != undefined ? this.state.uplatnica.svrhaUplate : \"\"}\n                      readOnly\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Iznos\"\n                      name=\"iznos\"\n                      value={this.state.uplatnica != undefined ? this.state.uplatnica.iznos+\" din\" : \"\"}\n                      readOnly\n                    />\n                    <div id=\"msg2\" />\n                    </div>\n                  \n                  <div className=\"form-group\">\n                    <ComboBox\n                      option={radnici.map((radnik) => (\n                        <option key={radnik.sifraRadnika} value={radnik.sifraRadnika}>\n                          {radnik.imePrezime}\n                        </option>\n                      ))}\n                      onChange={this.updateIdOfRadnik(\"radnik\")}\n                      id=\"radnik\"\n                      text=\"Izaberite radnika\"\n                      ID={\n                        this.state.radnik != null\n                          ? this.state.radnik.sifraRadnika\n                          : 0\n                      }\n                    />\n                    <div id=\"msg3\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <ComboBox\n                      option={osigKuce.map((osigKuca) => (\n                        <option key={osigKuca.idOsigKuce} value={osigKuca.idOsigKuce}>\n                          {osigKuca.nazivOsigKuce}\n                        </option>\n                      ))}\n                      onChange={this.updateIdOfOsigKuca(\"osiguravajucaKuca\")}\n                      id=\"osiguravajucaKuca\"\n                      text=\"Izaberite osiguravajucu kucu\"\n                      ID={\n                        this.state.osiguravajucaKuca != null\n                          ? this.state.osiguravajucaKuca.idOsigKuce\n                          : 0\n                      }\n                    />\n                    <div id=\"msg4\" />\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-large btn-success float-right mt-1\"\n                  >\n                    <i className=\"fa fa-check\" /> Sacuvaj\n                  </button>\n\n                  <Link to={`/obavestenjeList`}>\n                    <i className=\"fa fa-arrow-circle-left fa-3x fa-pull-left text-danger\" />\n                  </Link>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    obavestenje: state.obavestenje.obavestenje,\n    radnik: state.radnik,\n    osigKuca: state.osigKuca,\n  });\n\nexport default connect(mapStateToProps, { setMessage, getObavestenjeById, createObavestenje, getRadnici, getOsigKuce })(UpdateObavestenje);","D:\\ReactProjects\\project\\src\\reducers\\stavkeReducer.js",["326"],"import { GET_STAVKA, GET_STAVKE, DELETE_STAVKA } from \"../actions/types\";\n\nconst initialState = {\n  stavke: [],\n  stavka: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_STAVKE:\n      return {\n        ...state,\n        stavke: action.payload,\n      };\n    case GET_STAVKA:\n      return {\n        ...state,\n        stavka: action.payload,\n        };\n    case DELETE_STAVKA:\n        return {\n            ...state,\n            stavke: action.payload,\n        };\n    default:\n      return state;\n  }\n}","D:\\ReactProjects\\project\\src\\actions\\stavkeActions.js",[],"D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\ModalZaStavkuUpdate.js",["327","328","329","330","331"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-bootstrap/Modal\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { setMessage } from \"../../utils\";\n\nclass ModalZaStavkuUpdate extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      sifraStavke: \"\",\n      nazivVrsteOsig: \"\",\n      cena: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.updateStavka = this.updateStavka.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentDidMount(){\n    this.setState({\n        sifraStavke: this.props.stavka.sifraStavke != null ? this.props.stavka.sifraStavke : \"\",\n        nazivVrsteOsig: this.props.stavka.nazivVrsteOsig,\n        cena: this.props.stavka.cena\n    });\n  }\n\n  updateStavka() {\n    if (this.handleValidation() == true) {\n      return;\n    }\n\n    const izmenjenaStavka = {\n      sifraStavke: this.state.sifraStavke,\n      nazivVrsteOsig: this.state.nazivVrsteOsig,\n      cena: this.state.cena,\n    };\n    console.log(izmenjenaStavka);\n    this.props.unesiStavku(izmenjenaStavka);\n  }\n\n  handleValidation = () => {\n    let error = false;\n\n    if (this.state.nazivVrsteOsig == \"\") {\n      this.props.setMessage(\"Morate uneti naziv vrste osiguranja!\", \"#nazivM\", \"#m1\");\n      error = true;\n    }\n\n    if (this.state.cena == \"\") {\n      this.props.setMessage(\"Morate uneti cenu!\", \"#cenaM\", \"#m2\");\n      error = true;\n    }\n\n    if (parseInt(this.state.cena) <= 0) {\n      this.props.setMessage(\"Cena mora biti veca od 0!\", \"#cenaM\", \"#m3\");\n      error = true;\n    }\n\n    return error;\n  };\n\n  handleClose() {\n    this.props.handleClose();\n  }\n\n  render() {\n    console.log(this.state);\n    if(!this.props.show){\n        return null;\n    }\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.handleClose}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n        <Modal.Title>Izmena stavke racuna za osiguranje\n        </Modal.Title>\n        </Modal.Header>\n          <Modal.Body>\n          <div>\n          <div className=\"register\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6 m-auto\">\n                  <hr />\n                  <form>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        id=\"nazivM\"\n                        className=\"form-control\"\n                        placeholder=\"Naziv vrste osiguranja\"\n                        name=\"nazivVrsteOsig\"\n                        value={this.state.nazivVrsteOsig}\n                        onChange={this.onChange}\n                      />\n                      <div id=\"m1\" />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        id=\"cenaM\"\n                        className=\"form-control\"\n                        placeholder=\"Cena\"\n                        name=\"cena\"\n                        value={this.state.cena}\n                        onChange={this.onChange}\n                      />\n                      <div id=\"m2\" />\n                      <div id=\"m3\" />\n                    </div>\n                    \n                    <button\n                      type=\"button\"\n                      className=\"btn btn-large btn-success float-right mb-3\"\n                      onClick={this.updateStavka}\n                    >\n                      <i className=\"fa fa-check\" /> Izmeni stavku\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n          </Modal.Body>\n          \n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { setMessage })(ModalZaStavkuUpdate);\n","D:\\ReactProjects\\project\\src\\components\\RacunZaOsig\\PrikaziRacun.js",["332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createRacun, getRacun } from \"../../actions/racunActions\";\nimport { getNaciniPlacanja } from \"../../actions/nacinPlacanjaActions\";\nimport { getOvlascenjaLica } from \"../../actions/ovlascenoLiceActions\";\nimport { deleteStavka } from \"../../actions/stavkeActions\";\nimport DatePicker from \"react-datepicker\";\nimport classnames from \"classnames\";\nimport { adjustTimezoneDifference, dateFromBackendToJsDate } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport ComboBox from \"../ComboBox\";\nimport ModalZaUgovor from \"../UgovorOOsiguranju/ModalZaUgovor\";\nimport StavkaTable from \"../StavkaRacuna/StavkaTable\";\nimport ModalZaStavku from \"../StavkaRacuna/ModalZaStavku\";\nimport StavkaTableShow from \"../StavkaRacuna/StavkaTableShow\";\n\nclass PrikaziRacun extends Component {\n  constructor() {\n    super();\n    this.state = {\n      brojRacuna: \"\",\n      datum: \"\",\n      iznos: 0,\n      pozivNaBroj: \"\",\n      ugovorOOsiguranju: {\n        brojUgovora: 0,\n        zahtevZaOsiguranje: {\n            sifraZahteva: 0,\n        },\n      },\n      nacinPlacanja: {\n        idNacinaPlacanja: 0,\n      },\n      ovlascenoLiceOsiguravajuceKuce: {\n        sifraOL: 0,\n      },\n      stavke: [],\n      status: \"\",\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {brojRacuna,\n      datum,\n      iznos,\n      pozivNaBroj,\n      stavke,\n      ugovorOOsiguranju,\n      nacinPlacanja,\n      ovlascenoLiceOsiguravajuceKuce,\n      status} = nextProps.racun;\n\n    this.setState({\n      brojRacuna,\n      datum: dateFromBackendToJsDate(datum),\n      iznos,\n      pozivNaBroj,\n      stavke,\n      ugovorOOsiguranju,\n      nacinPlacanja,\n      ovlascenoLiceOsiguravajuceKuce,\n      status\n    });\n  }\n  componentDidMount() {\n    const { brojRacuna } = this.props.match.params;\n    this.props.getRacun(brojRacuna, this.props.history);\n  }\n\n  render() {\n    if(this.props.racun == undefined){\n      return;\n    }\n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 m-auto\">\n                <h4 className=\"text-center\">Prikaz racuna za osiguranje</h4>\n                <hr />\n                <form>\n                <div className=\"form-group\">\n                <label className=\" font-weight-bold\">Broj racuna:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Broj racuna\"\n                      name=\"brojRacuna\"\n                      value={this.state.brojRacuna}\n                      readOnly\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                  <label className=\" font-weight-bold\">Datum:</label>\n                  <div className=\"position-sticky\">\n                    <DatePicker\n                      showYearDropdown\n                      yearDropdownItemNumber={30}\n                      scrollableYearDropdown\n                      className=\"form-control \"\n                      dateFormat=\"dd.MM.yyyy\"\n                      selected={this.state.datum}\n                      placeholderText=\"Datum\"\n                      readOnly\n                    />\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                  <label className=\" font-weight-bold\">Poziv na broj:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Poziv na broj\"\n                      name=\"pozivNaBroj\"\n                      value={this.state.pozivNaBroj}\n                      readOnly\n                    />\n                  </div>\n                    <div className=\"form-group\">\n                    <label className=\" font-weight-bold\">Broj ugovora:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Broj ugovora\"\n                      name=\"brojUgovora\"\n                      value={this.state.ugovorOOsiguranju != undefined ? this.state.ugovorOOsiguranju.brojUgovora : \"\"}\n                      readOnly\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <label className=\" font-weight-bold\">Sifra zahteva za osiguranje:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Sifra zahteva\"\n                      name=\"sifraZahteva\"\n                      value={this.state.ugovorOOsiguranju != undefined ? this.state.ugovorOOsiguranju.zahtevZaOsiguranje.sifraZahteva : \"\"}\n                      readOnly\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                    <label className=\" font-weight-bold\">Stavke racuna:</label>\n                    <StavkaTableShow stavke={this.state.stavke} obrisiStavku={this.obrisiStavku} izmeniStavku={this.izmeniStavku}></StavkaTableShow>\n                    </div>\n                    <div className=\"form-group\">\n                    <label className=\" font-weight-bold\">Ukupan iznos racuna:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Ukupan iznos\"\n                      name=\"iznos\"\n                      value={this.state.iznos + \" din\"}\n                      readOnly\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                  <label className=\" font-weight-bold\">Nacin placanja:</label>\n                  <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Nacin placanja\"\n                      name=\"opisNacinaPlacanja\"\n                      value={this.state.nacinPlacanja.opisNacinaPlacanja}\n                      readOnly\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                  <label className=\" font-weight-bold\">Ovlasceno lice osiguravajuce kuce:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Ovlasceno lice\"\n                        name=\"imePrezime\"\n                        value={this.state.ovlascenoLiceOsiguravajuceKuce.imePrezime}\n                        readOnly\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <p className=\"font-weight-bold\">Status:</p>\n                    <input type=\"radio\" id=\"status\" name=\"status\" value=\"Formiran\" checked={this.state.status === \"Formiran\"} readOnly/>&nbsp;\n                    <label for=\"status\">Formiran</label>\n                    <input className=\"ml-5\" type=\"radio\" id=\"status\" name=\"status\" value=\"Izmenjen\" checked={this.state.status === \"Izmenjen\"} readOnly/>&nbsp;\n                    <label for=\"status\">Izmenjen</label>\n                    <input className=\"ml-5\" type=\"radio\" id=\"status\" name=\"status\" value=\"Obradjen\" checked={this.state.status === \"Obradjen\"} readOnly/>&nbsp;\n                    <label for=\"status\">Obradjen</label><br></br>\n                  </div>\n\n                  <Link to={`/racunList`}>\n                  <i className=\"fa fa-arrow-circle-left fa-3x fa-pull-left text-danger\" />\n                  </Link>\n                  </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    racun: state.racun.racun,\n  });\n\nexport default connect(mapStateToProps, { getRacun })(PrikaziRacun);","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\StavkaTableShow.js",["346"],"import React, { Component } from \"react\";\nimport StavkaRowShow from \"./StavkaRowShow\";\n\nclass StavkaTableShow extends Component {\n  render() {\n    if(this.props.stavke == undefined){\n      return null;\n    }\n      console.log(this.props.stavke);\n    let stavke = this.props.stavke.map((stavka) => (\n        <StavkaRowShow key={stavka.sifraStavke} stavka={stavka} />\n        ));\n        \n    return (\n      <div className=\"table-responsive tableHeight\">\n        <table\n          id=\"example\"\n          className=\"table table-sm table-striped table-bordered\"\n        >\n          <thead>\n            <tr>\n            <th>Sifra stavke</th>\n              <th>Naziv vrste osiguranja</th>\n              <th>Cena</th>\n            </tr>\n          </thead>\n          <tbody>{stavke}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default StavkaTableShow;","D:\\ReactProjects\\project\\src\\components\\StavkaRacuna\\StavkaRowShow.js",["347","348","349","350","351"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport ModalZaStavkuUpdate from \"./ModalZaStavkuUpdate\";\n\nclass StavkaRowShow extends Component {\n  render() {\n    return (\n      <tr>\n      <td>{this.props.stavka.sifraStavke}</td>\n        <td>{this.props.stavka.nazivVrsteOsig}</td>\n        <td>{this.props.stavka.cena} din</td>\n      </tr>\n    );\n  }\n}\n\nexport default (\n    StavkaRowShow\n);\n",{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":28,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":18,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":18,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":18,"endColumn":2},{"ruleId":"359","severity":1,"message":"360","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"363","severity":1,"message":"364","line":59,"column":37,"nodeType":"365","messageId":"366","endLine":59,"endColumn":39},{"ruleId":"363","severity":1,"message":"364","line":64,"column":42,"nodeType":"365","messageId":"366","endLine":64,"endColumn":44},{"ruleId":"363","severity":1,"message":"364","line":69,"column":40,"nodeType":"365","messageId":"366","endLine":69,"endColumn":42},{"ruleId":"363","severity":1,"message":"364","line":74,"column":49,"nodeType":"365","messageId":"366","endLine":74,"endColumn":51},{"ruleId":"363","severity":1,"message":"364","line":85,"column":33,"nodeType":"365","messageId":"366","endLine":85,"endColumn":35},{"ruleId":"359","severity":1,"message":"367","line":4,"column":8,"nodeType":"361","messageId":"362","endLine":4,"endColumn":14},{"ruleId":"359","severity":1,"message":"368","line":9,"column":10,"nodeType":"361","messageId":"362","endLine":9,"endColumn":14},{"ruleId":"363","severity":1,"message":"369","line":37,"column":39,"nodeType":"365","messageId":"366","endLine":37,"endColumn":41},{"ruleId":"363","severity":1,"message":"364","line":37,"column":71,"nodeType":"365","messageId":"366","endLine":37,"endColumn":73},{"ruleId":"359","severity":1,"message":"370","line":2,"column":10,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"359","severity":1,"message":"360","line":3,"column":8,"nodeType":"361","messageId":"362","endLine":3,"endColumn":17},{"ruleId":"359","severity":1,"message":"368","line":4,"column":10,"nodeType":"361","messageId":"362","endLine":4,"endColumn":14},{"ruleId":"359","severity":1,"message":"367","line":5,"column":8,"nodeType":"361","messageId":"362","endLine":5,"endColumn":14},{"ruleId":"359","severity":1,"message":"360","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"359","severity":1,"message":"371","line":8,"column":8,"nodeType":"361","messageId":"362","endLine":8,"endColumn":18},{"ruleId":"363","severity":1,"message":"364","line":61,"column":31,"nodeType":"365","messageId":"366","endLine":61,"endColumn":33},{"ruleId":"363","severity":1,"message":"364","line":66,"column":32,"nodeType":"365","messageId":"366","endLine":66,"endColumn":34},{"ruleId":"363","severity":1,"message":"364","line":71,"column":50,"nodeType":"365","messageId":"366","endLine":71,"endColumn":52},{"ruleId":"363","severity":1,"message":"364","line":81,"column":26,"nodeType":"365","messageId":"366","endLine":81,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":86,"column":51,"nodeType":"365","messageId":"366","endLine":86,"endColumn":53},{"ruleId":"363","severity":1,"message":"364","line":91,"column":59,"nodeType":"365","messageId":"366","endLine":91,"endColumn":61},{"ruleId":"363","severity":1,"message":"364","line":102,"column":33,"nodeType":"365","messageId":"366","endLine":102,"endColumn":35},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":18,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":18,"endColumn":2},{"ruleId":"359","severity":1,"message":"372","line":3,"column":53,"nodeType":"361","messageId":"362","endLine":3,"endColumn":63},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":33,"endColumn":2},{"ruleId":"359","severity":1,"message":"367","line":4,"column":8,"nodeType":"361","messageId":"362","endLine":4,"endColumn":14},{"ruleId":"359","severity":1,"message":"368","line":8,"column":10,"nodeType":"361","messageId":"362","endLine":8,"endColumn":14},{"ruleId":"359","severity":1,"message":"370","line":2,"column":10,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"359","severity":1,"message":"360","line":3,"column":8,"nodeType":"361","messageId":"362","endLine":3,"endColumn":17},{"ruleId":"359","severity":1,"message":"368","line":4,"column":10,"nodeType":"361","messageId":"362","endLine":4,"endColumn":14},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":23,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":5,"column":1,"nodeType":"358","endLine":13,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":6,"column":26,"nodeType":"365","messageId":"366","endLine":6,"endColumn":28},{"ruleId":"359","severity":1,"message":"370","line":2,"column":10,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"359","severity":1,"message":"360","line":3,"column":8,"nodeType":"361","messageId":"362","endLine":3,"endColumn":17},{"ruleId":"359","severity":1,"message":"367","line":5,"column":8,"nodeType":"361","messageId":"362","endLine":5,"endColumn":14},{"ruleId":"359","severity":1,"message":"367","line":4,"column":8,"nodeType":"361","messageId":"362","endLine":4,"endColumn":14},{"ruleId":"359","severity":1,"message":"368","line":5,"column":10,"nodeType":"361","messageId":"362","endLine":5,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":32,"column":33,"nodeType":"365","messageId":"366","endLine":32,"endColumn":35},{"ruleId":"363","severity":1,"message":"364","line":61,"column":35,"nodeType":"365","messageId":"366","endLine":61,"endColumn":37},{"ruleId":"363","severity":1,"message":"364","line":66,"column":25,"nodeType":"365","messageId":"366","endLine":66,"endColumn":27},{"ruleId":"359","severity":1,"message":"360","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"359","severity":1,"message":"371","line":9,"column":8,"nodeType":"361","messageId":"362","endLine":9,"endColumn":18},{"ruleId":"363","severity":1,"message":"364","line":88,"column":31,"nodeType":"365","messageId":"366","endLine":88,"endColumn":33},{"ruleId":"363","severity":1,"message":"364","line":93,"column":32,"nodeType":"365","messageId":"366","endLine":93,"endColumn":34},{"ruleId":"363","severity":1,"message":"364","line":98,"column":50,"nodeType":"365","messageId":"366","endLine":98,"endColumn":52},{"ruleId":"363","severity":1,"message":"364","line":108,"column":26,"nodeType":"365","messageId":"366","endLine":108,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":113,"column":51,"nodeType":"365","messageId":"366","endLine":113,"endColumn":53},{"ruleId":"363","severity":1,"message":"364","line":118,"column":59,"nodeType":"365","messageId":"366","endLine":118,"endColumn":61},{"ruleId":"363","severity":1,"message":"364","line":130,"column":33,"nodeType":"365","messageId":"366","endLine":130,"endColumn":35},{"ruleId":"363","severity":1,"message":"364","line":245,"column":25,"nodeType":"365","messageId":"366","endLine":245,"endColumn":27},{"ruleId":"363","severity":1,"message":"369","line":314,"column":59,"nodeType":"365","messageId":"366","endLine":314,"endColumn":61},{"ruleId":"363","severity":1,"message":"369","line":324,"column":59,"nodeType":"365","messageId":"366","endLine":324,"endColumn":61},{"ruleId":"359","severity":1,"message":"360","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"359","severity":1,"message":"371","line":8,"column":8,"nodeType":"361","messageId":"362","endLine":8,"endColumn":18},{"ruleId":"363","severity":1,"message":"364","line":74,"column":37,"nodeType":"365","messageId":"366","endLine":74,"endColumn":39},{"ruleId":"363","severity":1,"message":"364","line":79,"column":42,"nodeType":"365","messageId":"366","endLine":79,"endColumn":44},{"ruleId":"363","severity":1,"message":"364","line":84,"column":40,"nodeType":"365","messageId":"366","endLine":84,"endColumn":42},{"ruleId":"363","severity":1,"message":"364","line":89,"column":49,"nodeType":"365","messageId":"366","endLine":89,"endColumn":51},{"ruleId":"363","severity":1,"message":"364","line":101,"column":33,"nodeType":"365","messageId":"366","endLine":101,"endColumn":35},{"ruleId":"363","severity":1,"message":"364","line":157,"column":31,"nodeType":"365","messageId":"366","endLine":157,"endColumn":33},{"ruleId":"363","severity":1,"message":"369","line":213,"column":51,"nodeType":"365","messageId":"366","endLine":213,"endColumn":53},{"ruleId":"363","severity":1,"message":"369","line":223,"column":51,"nodeType":"365","messageId":"366","endLine":223,"endColumn":53},{"ruleId":"363","severity":1,"message":"369","line":233,"column":51,"nodeType":"365","messageId":"366","endLine":233,"endColumn":53},{"ruleId":"356","severity":1,"message":"357","line":8,"column":1,"nodeType":"358","endLine":28,"endColumn":2},{"ruleId":"359","severity":1,"message":"367","line":4,"column":8,"nodeType":"361","messageId":"362","endLine":4,"endColumn":14},{"ruleId":"359","severity":1,"message":"368","line":5,"column":10,"nodeType":"361","messageId":"362","endLine":5,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":34,"column":33,"nodeType":"365","messageId":"366","endLine":34,"endColumn":35},{"ruleId":"363","severity":1,"message":"364","line":50,"column":35,"nodeType":"365","messageId":"366","endLine":50,"endColumn":37},{"ruleId":"363","severity":1,"message":"364","line":55,"column":25,"nodeType":"365","messageId":"366","endLine":55,"endColumn":27},{"ruleId":"359","severity":1,"message":"360","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"359","severity":1,"message":"373","line":4,"column":10,"nodeType":"361","messageId":"362","endLine":4,"endColumn":21},{"ruleId":"359","severity":1,"message":"374","line":5,"column":10,"nodeType":"361","messageId":"362","endLine":5,"endColumn":27},{"ruleId":"359","severity":1,"message":"375","line":6,"column":10,"nodeType":"361","messageId":"362","endLine":6,"endColumn":27},{"ruleId":"359","severity":1,"message":"376","line":7,"column":10,"nodeType":"361","messageId":"362","endLine":7,"endColumn":22},{"ruleId":"359","severity":1,"message":"371","line":9,"column":8,"nodeType":"361","messageId":"362","endLine":9,"endColumn":18},{"ruleId":"359","severity":1,"message":"377","line":10,"column":10,"nodeType":"361","messageId":"362","endLine":10,"endColumn":34},{"ruleId":"359","severity":1,"message":"378","line":12,"column":8,"nodeType":"361","messageId":"362","endLine":12,"endColumn":16},{"ruleId":"359","severity":1,"message":"379","line":13,"column":8,"nodeType":"361","messageId":"362","endLine":13,"endColumn":21},{"ruleId":"359","severity":1,"message":"380","line":14,"column":8,"nodeType":"361","messageId":"362","endLine":14,"endColumn":19},{"ruleId":"359","severity":1,"message":"381","line":15,"column":8,"nodeType":"361","messageId":"362","endLine":15,"endColumn":21},{"ruleId":"363","severity":1,"message":"364","line":72,"column":25,"nodeType":"365","messageId":"366","endLine":72,"endColumn":27},{"ruleId":"363","severity":1,"message":"369","line":128,"column":59,"nodeType":"365","messageId":"366","endLine":128,"endColumn":61},{"ruleId":"363","severity":1,"message":"369","line":139,"column":59,"nodeType":"365","messageId":"366","endLine":139,"endColumn":61},{"ruleId":"363","severity":1,"message":"364","line":6,"column":26,"nodeType":"365","messageId":"366","endLine":6,"endColumn":28},{"ruleId":"359","severity":1,"message":"370","line":2,"column":10,"nodeType":"361","messageId":"362","endLine":2,"endColumn":17},{"ruleId":"359","severity":1,"message":"360","line":3,"column":8,"nodeType":"361","messageId":"362","endLine":3,"endColumn":17},{"ruleId":"359","severity":1,"message":"368","line":4,"column":10,"nodeType":"361","messageId":"362","endLine":4,"endColumn":14},{"ruleId":"359","severity":1,"message":"367","line":5,"column":8,"nodeType":"361","messageId":"362","endLine":5,"endColumn":14},{"ruleId":"359","severity":1,"message":"382","line":6,"column":8,"nodeType":"361","messageId":"362","endLine":6,"endColumn":27},"no-native-reassign",["383"],"no-negated-in-lhs",["384"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'moment' is defined but never used.","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","'connect' is defined but never used.","'classnames' is defined but never used.","'GET_ERRORS' is defined but never used.","'createRacun' is defined but never used.","'getNaciniPlacanja' is defined but never used.","'getOvlascenjaLica' is defined but never used.","'deleteStavka' is defined but never used.","'adjustTimezoneDifference' is defined but never used.","'ComboBox' is defined but never used.","'ModalZaUgovor' is defined but never used.","'StavkaTable' is defined but never used.","'ModalZaStavku' is defined but never used.","'ModalZaStavkuUpdate' is defined but never used.","no-global-assign","no-unsafe-negation"]